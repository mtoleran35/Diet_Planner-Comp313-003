trigger:
- main  # Trigger pipeline on push to 'main' branch

pool:
  vmImage: 'windows-latest'

stages:
- stage: Checkout
  displayName: 'Checkout Code'
  jobs:
  - job: CheckoutJob
    steps:
    - task: Checkout@1
      displayName: 'Checkout the code from GitHub'
      
- stage: Build
  displayName: 'Build Stage'
  dependsOn: Checkout
  jobs:
  - job: BuildJob
    steps:
    - task: Maven@3
      displayName: 'Build with Maven'
      inputs:
        mavenPomFile: 'pom.xml'  # Path to Maven POM file
        mavenOptions: '-Xmx3072m'  # Increase memory limit if necessary
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'  # JDK version to use
        jdkArchitectureOption: 'x64'  # JDK architecture
        publishJUnitResults: true  # Publish test results
        testResultsFiles: '**/surefire-reports/TEST-*.xml'  # Test report location
        goals: 'clean install'  # Build the project and install dependencies

- stage: CodeAnalysis
  displayName: 'Code Analysis Stage'
  dependsOn: Build
  jobs:
  - job: CodeAnalysisJob
    steps:
    - task: SonarQubePrepare@5
      displayName: 'Prepare SonarQube Analysis'
      inputs:
        SonarQube: 'SonarQubeServiceConnection'  # Replace with SonarQube service connection name
        scannerMode: 'CLI'
        configMode: 'manual'
        cliOptions: '-Dsonar.projectKey=your_project_key'  # Replace with SonarQube project key
    - task: Maven@3
      displayName: 'Run SonarQube Analysis'
      inputs:
        mavenPomFile: 'pom.xml'  # Path to Maven POM file
        goals: 'verify sonar:sonar'  # Run SonarQube analysis after build
    - task: SonarQubePublish@5
      displayName: 'Publish SonarQube Results'
      inputs:
        SonarQube: 'SonarQubeServiceConnection'  # Replace with SonarQube service connection name

- stage: Test
  displayName: 'Test Stage'
  dependsOn: CodeAnalysis
  jobs:
  - job: TestJob
    steps:
    - task: Maven@3
      displayName: 'Run Tests'
      inputs:
        mavenPomFile: 'pom.xml'  # Path to Maven POM file
        goals: 'test'  # Run unit tests
    - task: PublishTestResults@2
      displayName: 'Publish Test Results'
      inputs:
        testResultsFiles: '**/target/test-*.xml'  # Adjust if test reports are in a different location

- stage: ArtifactGeneration
  displayName: 'Artifact Generation Stage'
  dependsOn: Test
  jobs:
  - job: ArtifactJob
    steps:
    - task: Maven@3
      displayName: 'Create Deployable Artifact'
      inputs:
        mavenPomFile: 'pom.xml'  # Path to Maven POM file
        goals: 'package'  # Create deployable artifact (e.g., .jar or .war)
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Build Artifacts'
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'  # Path where build artifacts are staged
        artifactName: 'drop'  # Name of the artifact
        publishLocation: 'Container'  # Location to store the artifact
